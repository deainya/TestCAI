import streamlit as st
import requests
import json
import re
import os
from datetime import datetime
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ",
    page_icon="üîß",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# CSS –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
st.markdown("""
<style>
    .main .block-container {
        padding-top: 1rem;
        padding-bottom: 1rem;
    }
    
    .chat-message {
        padding: 1rem;
        border-radius: 10px;
        margin-bottom: 1rem;
        max-width: 80%;
    }
    
    .user-message {
        background-color: #007bff;
        color: white;
        margin-left: auto;
        text-align: right;
    }
    
    .bot-message {
        background-color: #f8f9fa;
        color: #333;
        margin-right: auto;
    }
    
    .email-input {
        margin-bottom: 2rem;
    }
    
    .success-notification {
        background-color: #d4edda;
        color: #155724;
        padding: 1rem;
        border-radius: 5px;
        border: 1px solid #c3e6cb;
        margin-bottom: 1rem;
    }
    
    .error-notification {
        background-color: #f8d7da;
        color: #721c24;
        padding: 1rem;
        border-radius: 5px;
        border: 1px solid #f5c6cb;
        margin-bottom: 1rem;
    }
</style>
""", unsafe_allow_html=True)

def validate_email(email):
    """–í–∞–ª–∏–¥–∞—Ü–∏—è email –∞–¥—Ä–µ—Å–∞"""
    pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    return re.match(pattern, email) is not None

def send_to_n8n(message_data):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ N8N webhook"""
    try:
        webhook_url = os.getenv('N8N_WEBHOOK_URL')
        if not webhook_url:
            return False, "N8N_WEBHOOK_URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        
        headers = {
            'Content-Type': 'application/json'
        }
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ POST –∑–∞–ø—Ä–æ—Å–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        response = requests.post(
            webhook_url, 
            json=message_data, 
            headers=headers, 
            timeout=30
        )
        
        if response.status_code == 200:
            return True, "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ N8N"
        else:
            return False, f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}"
            
    except requests.exceptions.Timeout:
        return False, "–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞"
    except requests.exceptions.ConnectionError:
        return False, "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É"
    except Exception as e:
        return False, f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

def display_chat_message(message, is_user=True):
    """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ"""
    if is_user:
        st.markdown(f'<div class="chat-message user-message">{message}</div>', unsafe_allow_html=True)
    else:
        st.markdown(f'<div class="chat-message bot-message">{message}</div>', unsafe_allow_html=True)

def main():
    st.title("üîß –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state
    if 'user_email' not in st.session_state:
        st.session_state.user_email = None
    if 'chat_messages' not in st.session_state:
        st.session_state.chat_messages = []
    if 'service_request' not in st.session_state:
        st.session_state.service_request = None
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ email
    if st.session_state.user_email is None:
        st.markdown("### –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è")
        
        email = st.text_input(
            "Email:",
            placeholder="example@company.com",
            key="email_input"
        )
        
        if st.button("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", type="primary"):
            if email and validate_email(email):
                st.session_state.user_email = email
                st.session_state.chat_messages = []
                st.rerun()
            else:
                st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å")
    
    else:
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        st.markdown(f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {st.session_state.user_email}")
        
        # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã email
        if st.button("–ò–∑–º–µ–Ω–∏—Ç—å email"):
            st.session_state.user_email = None
            st.session_state.chat_messages = []
            st.session_state.service_request = None
            st.rerun()
        
        st.markdown("---")
        
        # –ß–∞—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        st.markdown("### üí¨ –û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É")
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
        chat_container = st.container()
        with chat_container:
            for message in st.session_state.chat_messages:
                display_chat_message(message['content'], message['is_user'])
        
        # –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_input = st.text_area(
            "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–æ...",
            height=100,
            key="user_input"
        )
        
        col1, col2 = st.columns([1, 4])
        
        with col1:
            if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å", type="primary"):
                if user_input.strip():
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    st.session_state.chat_messages.append({
                        'content': user_input,
                        'is_user': True,
                        'timestamp': datetime.now()
                    })
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ
                    chat_history = "\n".join([msg['content'] for msg in st.session_state.chat_messages])
                    service_request = f"""
–ó–ê–ü–†–û–° –ù–ê –û–ë–°–õ–£–ñ–ò–í–ê–ù–ò–ï
====================
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {st.session_state.user_email}
–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}

–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã:
{chat_history}

====================
"""
                    
                    st.session_state.service_request = service_request
                    st.rerun()
        
        with col2:
            if st.button("–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç"):
                st.session_state.chat_messages = []
                st.session_state.service_request = None
                st.rerun()
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        if st.session_state.service_request:
            st.markdown("---")
            st.markdown("### üìã –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")
            
            st.text_area(
                "–ó–∞–ø—Ä–æ—Å:",
                value=st.session_state.service_request,
                height=200,
                disabled=True
            )
            
            # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
            col1, col2 = st.columns(2)
            
            with col1:
                if st.button("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å", type="primary"):
                    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                    message_data = {
                        'user_email': st.session_state.user_email,
                        'service_request': st.session_state.service_request,
                        'chat_history': st.session_state.chat_messages,
                        'timestamp': datetime.now().isoformat()
                    }
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ N8N
                    with st.spinner("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..."):
                        success, message = send_to_n8n(message_data)
                    
                    if success:
                        st.success("‚úÖ " + message)
                        # –û—á–∏—â–∞–µ–º —á–∞—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
                        st.session_state.chat_messages = []
                        st.session_state.service_request = None
                        time.sleep(2)
                        st.rerun()
                    else:
                        st.error("‚ùå " + message)
            
            with col2:
                if st.button("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"):
                    st.session_state.service_request = None
                    st.rerun()

if __name__ == "__main__":
    main()
